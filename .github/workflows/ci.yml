env:
  SKIP: no-commit-to-branch

jobs:
  lint-multi-os:
    name: Lint ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          cache: pip
          python-version: 3.x
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install .[lint]
      - name: Run pre-commit hooks
        uses: pre-commit/action@v3.0.1
      - name: Run sphinx
        if: endsWith(inputs.package, 'praw')
        run: sphinx-build --keep-going docs/ /tmp/foo
    strategy:
      matrix:
        os: [ macOS-latest, ubuntu-latest, windows-latest ]
  test-multi-os:
    name: Test ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          cache: pip
          python-version: 3.x
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[test]
      - name: Test with pytest
        env:
          ENSURE_NO_UNUSED_CASSETTES: 1
        run: pytest
    strategy:
      matrix:
        os: [ macOS-latest, ubuntu-latest, windows-latest ]
  test-multi-python:
    name: Test Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          cache: pip
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[test] coverage
      - name: Test with pytest
        run: coverage run --source ${{ inputs.package }} --module pytest
        env:
          ENSURE_NO_UNUSED_CASSETTES: 1
      - name: Submit to coveralls
        env:
          COVERALLS_PARALLEL: true
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: coveralls --service=github
      - name: Check coverage
        run: coverage report -m --fail-under=100
    strategy:
      matrix:
        python-version: [ "3.9", "3.10", "3.11", "3.12", "3.13" ]
  test-network:
    if: endsWith(inputs.package, 'praw')
    name: Test Network Request
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          cache: pip
          python-version: 3.x
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[test]
      - name: Run network test
        run: pytest tests/integration/test_github_actions.py::test_github_actions
        env:
          NETWORK_TEST_CLIENT_ID: ${{ secrets.NETWORK_TEST_CLIENT_ID }}
          NETWORK_TEST_CLIENT_SECRET: ${{ secrets.NETWORK_TEST_CLIENT_SECRET }}
name: CI
on:
  workflow_call:
    inputs:
      package:
        required: true
        type: string
permissions: read-all
